plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	// jacoco id
	id 'jacoco'
}
jacoco {
	// jacoco version
	toolVersion '0.8.8'
}
test {
	useJUnitPlatform()
	finalizedBy 'jacocoTestReport'
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacoco.exec")
	}
}
jacocoTestReport {
	reports {
		// 원하는 리포트를 켜고 끌 수 있습니다.
		html.enabled true
		xml.enabled false
		csv.enabled false

//  각 리포트 타입마다 리포트 저장 경로를 설정할 수 있습니다.
// html.destination file("src/jacoco/jacoco.html")
// xml.destination file("src/jacoco/jacoco.xml")
	}
	// exclude main classes
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['**/ManageSystemApplication.class', '**/*Config.class'])
		}))
	}
	finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = true // 활성화
			element = 'CLASS' // 클래스 단위로 커버리지 체크
			// includes = []

			// 라인 커버리지 제한을 80%로 설정
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.0
			}

			// 브랜치 커버리지 제한을 80%로 설정
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.0
			}

			// 빈 줄을 제외한 코드의 라인수를 최대 200라인으로 제한합니다.
			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 200
			}

			excludes = []
		}

		// 여러 개의 rule 정의 가능
		rule {
		}
	}
//	exclude Main Class
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['**/ManageSystemApplication.class', '**/*Config.class'])
		}))
	}
}


group = 'TKO'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

//sourceSets {
//	main {
//		resources {
//			srcDirs = ['src/main/java', 'src/main/resources']
//			include '**/*.xml'
//		}
//	}
//}


repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'
	compileOnly 'org.projectlombok:lombok'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	runtimeOnly 'mysql:mysql-connector-java:8.0.32'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'com.h2database:h2' // 테스트 코드 작성시 사용할 DB(H2)
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
